name: Build & Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag of Godot Engine"
        required: true
        type: choice
        options:
          - 4.3-stable
          - 4.2.2-stable
          - 4.2.1-stable
          - 4.2-stable

jobs:
  build:
    name: Build Godot Engine ${{ github.event.inputs.tag }} in ${{ matrix.mode }} mode on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        mode: [debug, release]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libx11-dev \
            libxcursor-dev \
            libxinerama-dev \
            libgl1-mesa-dev \
            libglu-dev \
            libasound2-dev \
            libpulse-dev \
            libudev-dev \
            libxi-dev \
            libxrandr-dev \
            libwayland-dev \
            yasm

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download Godot Engine source code
        run: |
          python download.py --tag ${{ github.event.inputs.tag }}

      - name: Build export templates
        run: |
          python build.py --mode ${{ matrix.mode }}

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.mode }}
          path: |
            workspace/godot/bin/*
            !workspace/godot/bin/*console*

  release:
    name: Release export templates
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        mode: [debug, release]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Create a directory to store artifacts
        run: mkdir -p templates

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.mode }}
          path: |
            templates/

      - name: Use UPX to compress export templates
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          files: |
            templates/*

      - name: Zip export templates
        run: |
          cd templates
          7z a custom-templates.7z .

      - name: Get timestamp
        id: timestamp
        run: |
          echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"

      - name: GH Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            custom-templates.7z
          tag_name: ${{ github.event.inputs.tag }}-${{ steps.timestamp.outputs.timestamp }}
          release_name: ${{ github.event.inputs.tag }}-${{ steps.timestamp.outputs.timestamp }}
          body: |
            Custom export templates for Godot Engine ${{ github.event.inputs.tag }}
